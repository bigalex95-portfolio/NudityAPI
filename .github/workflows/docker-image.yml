name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    environment: prod
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_ACCESS_KEY: ${{secrets.DOCKERHUB_ACCESS_KEY}}
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
    steps:
    - uses: actions/checkout@v2
    - name: Dokcer Hub login
      run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_ACCESS_KEY
    
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/nudity:latest    
  
  deploy-on-prod1:
    needs: build
    environment: prod
    runs-on: ubuntu-latest
    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST_1 }} >> ~/.ssh/known_hosts
    
    - name: Pull update nudity image
      run: ssh root@${{ secrets.SSH_HOST_1 }} -C docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nudity:latest
    
    - name: Stop and remove old docker container
      run: ssh root@${{ secrets.SSH_HOST_1 }} -C docker container stop nudity && docker container rm nudity

    - name: Create a new docker container
      run: ssh root@${{ secrets.SSH_HOST_1 }} -C docker run --name=nudity --restart=always -d bigalex95/nudity:latest
    
    - name: Remove unused docker images
      run: ssh root@${{ secrets.SSH_HOST_1 }} -C docker image prune -f

  deploy-on-prod2:
    needs: build
    environment: prod
    runs-on: ubuntu-latest
    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST_2 }} >> ~/.ssh/known_hosts
    
    - name: Pull update nudity image
      run: ssh root@${{ secrets.SSH_HOST_2 }} -C docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nudity:latest
    
    - name: Stop and remove old docker container
      run: ssh root@${{ secrets.SSH_HOST_2 }} -C "docker container stop nudity && docker container rm nudity"

    - name: Create a new docker container
      run: ssh root@${{ secrets.SSH_HOST_2 }} -C docker run --name=nudity --restart=always -d bigalex95/nudity:latest
    
    - name: Remove unused docker images
      run: ssh root@${{ secrets.SSH_HOST_2 }} -C docker image prune -f
      
